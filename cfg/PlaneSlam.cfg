#!/usr/bin/env python
PACKAGE = "plane_slam"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

segment_method_enum = gen.enum([gen.const("LineBased", int_t, 0, "COVARIANCE_MATRIX"),
                                gen.const("OMPS", int_t, 1, "AVERAGE_3D_GRADIENT") ],
                        "An enum to set plane segment method")
##
gen.add("plane_segment_method", int_t, 0, "Plane segment method", 0, edit_method=segment_method_enum)
gen.add("do_visual_odometry", bool_t, 0, "", False)
gen.add("do_mapping", bool_t, 0, "", False)
gen.add("do_slam", bool_t, 0, "", True)
gen.add("get_true_pose", bool_t, 0, "", False)
gen.add("get_odom_pose", bool_t, 0, "", True)
gen.add("mapping_key_message", bool_t, 0, "", False)
gen.add("use_odom_tracking", bool_t, 0, "Relative motion from odom, not from matching", True)
gen.add("mapping_keypoint", bool_t, 0, "", True)
##
gen.add("world_frame", str_t, 0, "", "/world")
gen.add("map_frame", str_t, 0, "", "/map")
gen.add("base_frame", str_t, 0, "", "/base_footprint")
gen.add("odom_frame", str_t, 0, "", "/odom_combined")
gen.add("skip_message", int_t, 0, "", 1, 1, 30)
gen.add("set_init_pose_", bool_t, 0, "", False)
##
gen.add("save_map_full_pcd", bool_t, 0, "", True)
gen.add("save_map_full_colored_pcd", bool_t, 0, "", True)
gen.add("save_structure_pcd", bool_t, 0, "", False)
gen.add("save_octomap", bool_t, 0, "", False)
gen.add("save_input_cloud_pcd", bool_t, 0, "", False)
gen.add("save_message_pcd", int_t, 0, "", 0, 0, 32000)
##

exit(gen.generate(PACKAGE, "plane_slam", "PlaneSlam"))
